C51 COMPILER V9.00   MAIN                                                                  12/30/2016 20:16:09 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: E:\2.DevelopSoft\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst) OBJEC
                    -T(.\list\main.obj)

line level    source

   1          /*********************************************************************
   2                           作者：神秘藏宝室
   3                           店铺：ILoveMCU.taobao.com
   4          
   5                  本例程仅适用于在本店购买模块的用户使用，鄙视其它店铺的盗用行为
   6                  版权所有，盗版必究！！！
   7                  A6模块链接：
   8                  A6 GSM/GPRS模块：       
   9                  https://item.taobao.com/item.htm?id=542988971078
  10                  A7 GSM/GPRS/GPS 三合一模块：
  11                  https://item.taobao.com/item.htm?id=542988971078
  12                  IAP15W4K58S4 STC15W4K56S4 最小系统：
  13                  https://item.taobao.com/item.htm?id=539809674723
  14                  USB-TTL模块：
  15                  https://item.taobao.com/item.htm?id=39481188174
  16          
  17                  A7模块          STC15W最小系统
  18                  GND             -->             GND
  19                  U_TXD   -->             P0.0/RXD3
  20                  U_RXD   <--             P0.1/TXD3
  21                  GPS_TXD -->             P1.0/RXD2
  22          *********************************************************************/
  23          #include "main.h"
  24          #include "delay.h"
  25          #include "uart.h"
  26          
  27          #include <stdio.h>
  28          #include <stdlib.h>
  29          #include <string.h>
  30          
  31          
  32          /*************  功能说明        **************
  33          
  34          
  35          
  36          ******************************************/
  37          
  38          /*************  本地常量声明    **************/
  39          #define Success 1U
  40          #define Failure 0U
  41          
  42          /*************  本地变量声明    **************/
  43          unsigned long  Time_Cont = 0;       //定时器计数器
  44          bit ledState = LED_OFF;
  45          
  46          unsigned int gprsBufferCount = 0;
  47          
  48          
  49          
  50          /*************  本地函数声明    **************/
  51          
  52          
  53          
  54          /*************  外部函数和变量声明 *****************/
C51 COMPILER V9.00   MAIN                                                                  12/30/2016 20:16:09 PAGE 2   

  55          
  56          
  57          
  58          /******************** IO配置函数 **************************/
  59          void    GPIO_config(void)
  60          {
  61   1              P5M0 = 0;               //设置准双向口
  62   1              P5M1 = 0;
  63   1      }
  64          
  65          /******************** 主函数 **************************/
  66          void main(void)
  67          {
  68   1              GPIO_config();
  69   1              UartInit();
  70   1      
  71   1              SendString("ILoveMCU.taobao.com");
  72   1              delay_ms(200);
  73   1              clrStruct();
  74   1      
  75   1              initGprs();
  76   1              while(1)
  77   1              {
  78   2                      parseGpsBuffer();
  79   2                      printGpsBuffer();       
  80   2              }
  81   1      }
  82          
  83          void initGprs()
  84          {
  85   1              if (sendCommand("AT\r\n", "OK", 3000, 10) == Success);
  86   1              else errorLog(1);
  87   1      
  88   1      
  89   1      //      如果输入 AT+CREG? <CR>则返回+CREG: <mode>, <stat> [ ,<lac>,<ci> ]
  90   1      // 注: <mode>的值共有三个选项,分别是 0 or 1 or 2,  其中0 代表关闭网络注册结果
  91   1      //            码, 1 代表当网络注册状态改变时激活网络注册结果码, 2 代表激活网
  92   1      // 络注册结果码同时显示区域和小区信息.
  93   1      //    <stat>的返回值共有三个,分别是 0, 1, 2,3,4,5 ,  其中 0 代表没有注册网络同时
  94   1      //   模块没有找到运营商, 1代注册到了本地网络, 2 代表找到运营商但没
  95   1      // 有注册网络, 3 代表注册被拒绝, 4 代表未知的数据, 5代表注册在漫游
  96   1      // 状态.
  97   1      //    <lac>表示所属网络区域代码,十六进制格式显示,如: “ 279C”
  98   1      //    <ci>表示所属网络的小区 ID,十六进制格式显示,如: “ 0EB2”  Tech-Link T&E
  99   1              if (sendCommand("AT+CPIN?\r\n", "READY", 1000, 10) == Success);
 100   1              else errorLog(2);
 101   1              delay_ms(10);
 102   1      
 103   1              if (sendCommand("AT+CREG?\r\n", "CREG: 1", 1000, 10) == Success);
 104   1              else errorLog(3);
 105   1              delay_ms(10);
 106   1      
 107   1              if (sendCommand("AT+GPS=1\r\n", "OK\r\n", 1000, 10) == Success);
 108   1              else errorLog(4);
 109   1              delay_ms(10);
 110   1      }
 111          
 112          unsigned int sendCommand(char *Command, char *Response, unsigned long Timeout, unsigned char Retry)
 113          {
 114   1              unsigned char n;
 115   1              Uart3CLR_Buf();
 116   1              for (n = 0; n < Retry; n++)
C51 COMPILER V9.00   MAIN                                                                  12/30/2016 20:16:09 PAGE 3   

 117   1              {
 118   2                      SendString("\r\n---------send AT Command:---------\r\n");
 119   2                      SendString(Command);
 120   2      
 121   2                      Uart3SendString(Command);               //发送GPRS指令
 122   2      
 123   2                      Time_Cont = 0;
 124   2                      while (Time_Cont < Timeout)
 125   2                      {
 126   3                              delay_ms(100);
 127   3                              Time_Cont += 100;
 128   3                              if (strstr(Uart3_Rec_Buf, Response) != NULL)
 129   3                              {
 130   4                                      SendString("\r\n==========receive AT Command:==========\r\n");
 131   4                                      SendString(Uart3_Rec_Buf); //输出接收到的信息
 132   4                                      Uart3CLR_Buf();
 133   4                                      return Success;
 134   4                              }
 135   3                              
 136   3                      }
 137   2                      Time_Cont = 0;
 138   2              }
 139   1              SendString("\r\n==========receive AT Command:==========\r\n");
 140   1              SendString(Uart3_Rec_Buf);//输出接收到的信息
 141   1              Uart3CLR_Buf();
 142   1              return Failure;
 143   1      }
 144          
 145          
 146          void soft_reset(void)    //制造重启命令
 147          {
 148   1         ((void (code *) (void)) 0x0000) ();
 149   1      }
 150          
 151          void errorLog(int num)
 152          {
 153   1              SendString("ERROR");
 154   1              SendData(num+0x30);
 155   1              SendString("\r\n");
 156   1              while (1)
 157   1              {
 158   2                      if (sendCommand("AT\r\n", "OK", 100, 10) == Success)
 159   2                      {
 160   3                              SendString("\r\nRESET!!!!!!\r\n");
 161   3                              soft_reset();
 162   3                      }
 163   2                      delay_ms(200);
 164   2              }
 165   1      }
 166          
 167          
 168          void parseGpsBuffer()
 169          {
 170   1              char *subString;
 171   1              char *subStringNext;
 172   1              char i = 0;
 173   1              if (Save_Data.isGetData)
 174   1              {
 175   2                      Save_Data.isGetData = false;
 176   2                      SendString("**************\r\n");
 177   2                      SendString(Save_Data.GPS_Buffer);
 178   2      
C51 COMPILER V9.00   MAIN                                                                  12/30/2016 20:16:09 PAGE 4   

 179   2                      
 180   2                      for (i = 0 ; i <= 6 ; i++)
 181   2                      {
 182   3                              if (i == 0)
 183   3                              {
 184   4                                      if ((subString = strstr(Save_Data.GPS_Buffer, ",")) == NULL)
 185   4                                              errorLog(1);    //解析错误
 186   4                              }
 187   3                              else
 188   3                              {
 189   4                                      subString++;
 190   4                                      if ((subStringNext = strstr(subString, ",")) != NULL)
 191   4                                      {
 192   5                                              char usefullBuffer[2]; 
 193   5                                              switch(i)
 194   5                                              {
 195   6                                                      case 1:memcpy(Save_Data.UTCTime, subString, subStringNext - subString);break;   //获取UTC时间
 196   6                                                      case 2:memcpy(usefullBuffer, subString, subStringNext - subString);break;       //获取UTC时间
 197   6                                                      case 3:memcpy(Save_Data.latitude, subString, subStringNext - subString);break;  //获取纬度信息
 198   6                                                      case 4:memcpy(Save_Data.N_S, subString, subStringNext - subString);break;       //获取N/S
 199   6                                                      case 5:memcpy(Save_Data.longitude, subString, subStringNext - subString);break; //获取经度信息
 200   6                                                      case 6:memcpy(Save_Data.E_W, subString, subStringNext - subString);break;       //获取E/W
 201   6      
 202   6                                                      default:break;
 203   6                                              }
 204   5      
 205   5                                              subString = subStringNext;
 206   5                                              Save_Data.isParseData = true;
 207   5                                              if(usefullBuffer[0] == 'A')
 208   5                                                      Save_Data.isUsefull = true;
 209   5                                              else if(usefullBuffer[0] == 'V')
 210   5                                                      Save_Data.isUsefull = false;
 211   5      
 212   5                                      }
 213   4                                      else
 214   4                                      {
 215   5                                              errorLog(2);    //解析错误
 216   5                                      }
 217   4                              }
 218   3      
 219   3      
 220   3                      }
 221   2              }
 222   1      }
 223          
 224          void printGpsBuffer()
 225          {
 226   1              if (Save_Data.isParseData)
 227   1              {
 228   2                      Save_Data.isParseData = false;
 229   2                      
 230   2                      SendString("Save_Data.UTCTime = ");
 231   2                      SendString(Save_Data.UTCTime);
 232   2                      SendString("\r\n");
 233   2      
 234   2                      if(Save_Data.isUsefull)
 235   2                      {
 236   3                              Save_Data.isUsefull = false;
 237   3                              SendString("Save_Data.latitude = ");
 238   3                              SendString(Save_Data.latitude);
 239   3                              SendString("\r\n");
 240   3      
C51 COMPILER V9.00   MAIN                                                                  12/30/2016 20:16:09 PAGE 5   

 241   3      
 242   3                              SendString("Save_Data.N_S = ");
 243   3                              SendString(Save_Data.N_S);
 244   3                              SendString("\r\n");
 245   3      
 246   3                              SendString("Save_Data.longitude = ");
 247   3                              SendString(Save_Data.longitude);
 248   3                              SendString("\r\n");
 249   3      
 250   3                              SendString("Save_Data.E_W = ");
 251   3                              SendString(Save_Data.E_W);
 252   3                              SendString("\r\n");
 253   3      
 254   3                              LED = ledState;
 255   3                              ledState = ~ledState;
 256   3      
 257   3                      }
 258   2                      else
 259   2                      {
 260   3                              SendString("GPS DATA is not usefull!\r\n");
 261   3                      }
 262   2                      
 263   2              }
 264   1      }
 265          
 266          
 267          void clrStruct()
 268          {
 269   1              Save_Data.isGetData = false;
 270   1              Save_Data.isParseData = false;
 271   1              Save_Data.isUsefull = false;
 272   1              memset(Save_Data.GPS_Buffer, 0, GPS_Buffer_Length);      //清空
 273   1              memset(Save_Data.UTCTime, 0, UTCTime_Length);
 274   1              memset(Save_Data.latitude, 0, latitude_Length);
 275   1              memset(Save_Data.N_S, 0, N_S_Length);
 276   1              memset(Save_Data.longitude, 0, longitude_Length);
 277   1              memset(Save_Data.E_W, 0, E_W_Length);
 278   1              
 279   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1097    ----
   CONSTANT SIZE    =    334    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
